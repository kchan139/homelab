---
- name: Provision The HomeLab
  hosts: all
  become: true
  gather_facts: true

  vars_files:
    - vars/secrets.yml

  tasks:
    - name: Update dnf cache
      ansible.builtin.dnf:
        update_cache: yes
      register: dnf_update
      retries: 3
      delay: 10
      until: dnf_update is succeeded

    - name: Install prerequisites
      ansible.builtin.dnf:
        name:
          - bat
          - git
          - zsh
          - tree
          - curl
          - btop
          - nmap
          - xclip
          - helix
          - whois
          - gnupg2
          - tcpdump
          - net-tools
          - fastfetch
          - bind-utils
          - ca-certificates
        state: present
      register: dnf_prereqs
      retries: 3
      delay: 10
      until: dnf_prereqs is succeeded

    - name: Enable Copr repository for yazi
      community.general.copr:
        name: lihaohong/yazi
        state: enabled

    - name: Install yazi
      ansible.builtin.dnf:
        name: yazi
        state: present
      register: dnf_prereqs
      retries: 3
      delay: 10
      until: dnf_prereqs is succeeded

    - name: Set timezone to Asia/Ho_Chi_Minh
      ansible.builtin.timezone:
        name: Asia/Ho_Chi_Minh

    - name: Create non-root user {{ user }}
      ansible.builtin.user:
        name: "{{ user }}"
        state: present
        shell: /bin/zsh
        create_home: yes
        groups: wheel
        append: yes
        password: "{{ password | password_hash('sha512') }}"

    # --- FIREWALL --- #
    - name: Install firewalld
      ansible.builtin.dnf:
        name: firewalld
        state: present

    - name: Start and enable firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: yes

    - name: Set default zone to drop
      ansible.posix.firewalld:
        zone: drop
        state: enabled
        permanent: yes
        immediate: yes

    - name: Allow SSH on custom port
      ansible.posix.firewalld:
        port: "{{ ssh_port }}/tcp"
        zone: public
        state: enabled
        permanent: yes
        immediate: yes

    # DigitalOcean's firewall will block this normally
    # This is for emergency access
    - name: Allow SSH on default port 22
      ansible.posix.firewalld:
        port: "22/tcp"
        zone: public
        state: enabled
        permanent: yes
        immediate: yes

    # --- SSH CONFIG --- #
    - name: Create .ssh directory for {{ user }}
      ansible.builtin.file:
        path: /home/{{ user }}/.ssh
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: "0700"

    - name: Copy root's authorized_keys to {{ user }} user
      ansible.builtin.copy:
        src: /root/.ssh/authorized_keys
        dest: /home/{{ user }}/.ssh/authorized_keys
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: "0600"
        remote_src: yes

    - name: Configure SSH to listen on port 22 and custom port
      ansible.builtin.blockinfile:
        path: /etc/ssh/sshd_config
        marker: "# {mark} ANSIBLE MANAGED SSH PORTS"
        block: |
          Port 22
          Port {{ ssh_port }}
        backup: yes

    - name: Disable password authentication
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?PasswordAuthentication"
        line: "PasswordAuthentication no"

    - name: Disable root login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?PermitRootLogin"
        line: "PermitRootLogin no"

    - name: Enable PAM
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?UsePAM"
        line: "UsePAM yes"

    - name: Enable public key auth
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?PubkeyAuthentication"
        line: "PubkeyAuthentication yes"

    - name: Set authorized_keys path
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?AuthorizedKeysFile"
        line: "AuthorizedKeysFile .ssh/authorized_keys"

    - name: Ensure xauth is installed (needed for X11 forwarding)
      ansible.builtin.dnf:
        name: xauth
        state: present

    - name: Enable X11 forwarding in sshd_config
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?X11Forwarding"
        line: "X11Forwarding yes"
        backup: yes

    - name: Set X11 display offset
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?X11DisplayOffset"
        line: "X11DisplayOffset 10"

    - name: Use localhost for X11 forwarding
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?X11UseLocalhost"
        line: "X11UseLocalhost yes"

    - name: Configure SELinux for custom SSH port
      community.general.seport:
        ports: "{{ ssh_port }}"
        proto: tcp
        setype: ssh_port_t
        state: present
      when: ansible_selinux.status == "enabled"

    - name: Validate SSH config
      ansible.builtin.command: sshd -t

    - name: Reload SSH service
      ansible.builtin.systemd:
        name: sshd
        state: restarted

    # --- CROWDSEC --- #
    - name: Check if CrowdSec repository file exists
      ansible.builtin.stat:
        path: /etc/yum.repos.d/crowdsec_crowdsec.repo
      register: crowdsec_repo_file

    - name: Add CrowdSec repository
      ansible.builtin.shell: >
        curl -s https://packagecloud.io/install/repositories/crowdsec/crowdsec/script.rpm.sh | bash
      args:
        warn: false
      when: not crowdsec_repo_file.stat.exists
      changed_when: true

    - name: Install CrowdSec agent and firewall bouncer
      ansible.builtin.dnf:
        name:
          - crowdsec
          - crowdsec-firewall-bouncer-nftables
        state: present
        disable_gpg_check: yes

    - name: Start and enable CrowdSec service
      ansible.builtin.systemd:
        name: crowdsec
        state: started
        enabled: yes

    - name: Start and enable CrowdSec firewall bouncer service
      ansible.builtin.systemd:
        name: crowdsec-firewall-bouncer
        state: started
        enabled: yes
